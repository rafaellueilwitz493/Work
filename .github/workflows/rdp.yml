name: Persistent Playit RDP Tunnel

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Enable and Persist RDP
      run: |
        Write-Host "üîÑ Enabling RDP..."
        $rdpKeys = @(
          'HKLM:\System\CurrentControlSet\Control\Terminal Server',
          'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp'
        )
        foreach ($key in $rdpKeys) {
          Set-ItemProperty -Path $key -Name "fDenyTSConnections" -Value 0 -ErrorAction SilentlyContinue
          Set-ItemProperty -Path $key -Name "UserAuthentication" -Value 1 -ErrorAction SilentlyContinue
          Set-ItemProperty -Path $key -Name "fSingleSessionPerUser" -Value 0 -ErrorAction SilentlyContinue
        }
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop" -ErrorAction SilentlyContinue
        Set-Service -Name TermService -StartupType Automatic
        Write-Host "‚úÖ RDP Enabled Successfully!"

    - name: Install WinGet
      run: |
        Write-Host "üîÑ Checking for WinGet..."
        if (-not (Get-Command winget -ErrorAction SilentlyContinue)) {
          Write-Host "Installing WinGet via MSIXBUNDLE..."
          Invoke-WebRequest -Uri "https://aka.ms/getwinget" -OutFile "$env:TEMP\WinGet.msixbundle"
          Try { Add-AppxPackage -Path "$env:TEMP\WinGet.msixbundle" -ErrorAction Stop }
          Catch {
            Write-Host "‚ö†Ô∏è Add-AppxPackage failed. Trying DISM method..."
            Try { DISM /Online /Add-Capability /CapabilityName:Microsoft.DesktopAppInstaller~~~~0.0.1.0 }
            Catch { Write-Host "‚ùå WinGet install failed." }
          }
        }
        if (Get-Command winget -ErrorAction SilentlyContinue) { Write-Host "‚úÖ WinGet installed!" }

    - name: Enable Virtualization & Hyper-V
      run: |
        Write-Host "üîÑ Enabling Virtualization..."
        bcdedit /set hypervisorlaunchtype Auto
        Write-Host "üîÑ Enabling Hyper-V..."
        $features = @("Microsoft-Hyper-V-All", "Microsoft-Hyper-V", "Microsoft-Hyper-V-Platform", "HypervisorPlatform")
        foreach ($feature in $features) {
          Try { Enable-WindowsOptionalFeature -Online -FeatureName $feature -NoRestart -ErrorAction Stop }
          Catch { Write-Host "‚ö†Ô∏è Failed to enable $feature, trying next..." }
        }
        DISM /Online /Enable-Feature /FeatureName:Microsoft-Hyper-V-All /All /NoRestart
        Write-Host "‚úÖ Virtualization & Hyper-V Enabled!"

    - name: Install Playit
      run: |
        Write-Host "üîÑ Downloading Playit..."
        $playitUrls = @( 
          "https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-windows-x86_64-signed.exe",
          "https://playit.gg/downloads/playit.exe"
        )
        foreach ($url in $playitUrls) {
          Try {
            Invoke-WebRequest -Uri $url -OutFile "$env:USERPROFILE\playit.exe" -ErrorAction Stop
            if (Test-Path "$env:USERPROFILE\playit.exe") { break }
          }
          Catch { Write-Host "‚ö†Ô∏è Failed to download from $url, trying next..." }
        }
        if (Test-Path "$env:USERPROFILE\playit.exe") { Write-Host "‚úÖ Playit Downloaded!" } else { Write-Host "‚ùå Playit download failed." }

    - name: Register Playit as a Service
      run: |
        Write-Host "üîÑ Registering Playit as a service..."
        sc create PlayitService binPath= "$env:USERPROFILE\playit.exe --secret $env:PLAYIT_AUTH_KEY" start= auto
        Try { sc start PlayitService }
        Catch { Write-Host "‚ö†Ô∏è Playit Service failed to start. Trying manual execution..."; Start-Process -FilePath "$env:USERPROFILE\playit.exe" }
        Write-Host "‚úÖ Playit Service Registered!"

    - name: Keep Session Active
      run: |
        Write-Host "üîÑ Keeping RDP Session Active..."
        reg add "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon" /v KeepRDPConnections /t REG_DWORD /d 1 /f
        Write-Host "‚úÖ RDP Session Kept Active!"

    - name: Keep Runner Alive
      run: |
        while ($true) {
          Write-Host "üîÑ Keeping runner alive... $(Get-Date)"
          Start-Sleep -Seconds 300
        }
