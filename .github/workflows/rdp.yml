name: Persistent Playit RDP Tunnel

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    # 🔹 Enable RDP and keep it persistent
    - name: Enable and Persist RDP
      run: |
        Write-Host "🔄 Enabling RDP..."
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fSingleSessionPerUser" -Value 0
        Set-Service -Name TermService -StartupType Automatic
        Write-Host "✅ RDP Enabled Successfully!"

    # 🔹 Install WinGet (multiple fallback methods)
    - name: Install WinGet
      run: |
        Write-Host "🔄 Checking for WinGet..."
        if (-not (Get-Command winget -ErrorAction SilentlyContinue)) {
          Write-Host "Installing WinGet..."
          Invoke-WebRequest -Uri "https://aka.ms/getwinget" -OutFile "$env:TEMP\WinGet.msixbundle"
          Add-AppxPackage -Path "$env:TEMP\WinGet.msixbundle" -ErrorAction SilentlyContinue
          Start-Sleep -Seconds 10
        }
        if (-not (Get-Command winget -ErrorAction SilentlyContinue)) {
          Write-Host "⚠️ WinGet installation failed, trying alternate method..."
          DISM /Online /Add-Capability /CapabilityName:Microsoft.DesktopAppInstaller~~~~0.0.1.0
        }
        if (Get-Command winget -ErrorAction SilentlyContinue) {
          Write-Host "✅ WinGet installed successfully!"
        } else {
          Write-Host "❌ WinGet installation failed. Continuing without it..."
        }

    # 🔹 Enable Virtualization & Hyper-V (multiple fallback methods)
    - name: Enable Virtualization & Hyper-V
      run: |
        Write-Host "🔄 Enabling Virtualization..."
        bcdedit /set hypervisorlaunchtype Auto
        Write-Host "🔄 Enabling Hyper-V..."
        $features = @("Microsoft-Hyper-V-All", "Microsoft-Hyper-V", "Microsoft-Hyper-V-Platform")
        foreach ($feature in $features) {
          Write-Host "Trying to enable $feature..."
          Enable-WindowsOptionalFeature -Online -FeatureName $feature -NoRestart -ErrorAction SilentlyContinue
        }
        Write-Host "🔄 Trying DISM to enable Hyper-V..."
        DISM /Online /Enable-Feature /FeatureName:Microsoft-Hyper-V-All /All /NoRestart
        Write-Host "🔄 Enabling Windows Hypervisor Platform..."
        Enable-WindowsOptionalFeature -Online -FeatureName HypervisorPlatform -NoRestart -ErrorAction SilentlyContinue
        Write-Host "✅ Virtualization & Hyper-V enabled!"

    # 🔹 Install Playit
    - name: Install Playit
      run: |
        Write-Host "🔄 Downloading Playit..."
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Write-Host "✅ Playit Downloaded!"

    # 🔹 Register Playit as a Service
    - name: Register Playit as a Service
      run: |
        Write-Host "🔄 Registering Playit as a service..."
        sc create PlayitService binPath= "$env:USERPROFILE\playit.exe --secret $env:PLAYIT_AUTH_KEY" start= auto
        sc start PlayitService
        Write-Host "✅ Playit Service Registered!"

    # 🔹 Keep Session Active
    - name: Keep Session Active
      run: |
        Write-Host "🔄 Keeping RDP Session Active..."
        reg add "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon" /v KeepRDPConnections /t REG_DWORD /d 1 /f
        Write-Host "✅ RDP Session Kept Active!"

    # 🔹 Keep GitHub Actions runner alive
    - name: Keep Runner Alive
      run: |
        while ($true) {
          Write-Host "🔄 Keeping runner alive... $(Get-Date)"
          Start-Sleep -Seconds 300
        }
