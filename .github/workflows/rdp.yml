name: Ultimate Persistent RDP with VM & WinGet (Auto-Fix)

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    # Download and Install Playit with Automatic Reconnection
    - name: Install Playit Agent (Failproof)
      run: |
        $playitPath = "$env:USERPROFILE\playit.exe"
        if (-not (Test-Path $playitPath)) {
            Write-Host "ðŸ”„ Downloading Playit..."
            Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-windows-x86_64-signed.exe" -OutFile $playitPath
        }
        Write-Host "âœ… Playit Installed!"
        New-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -Name "Playit" -Value "$playitPath --secret $env:PLAYIT_AUTH_KEY" -Force

    # Enable RDP with Multiple Failover Methods
    - name: Enable & Persist RDP
      run: |
        function Enable-RDP {
            try {
                Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
                Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
                Set-Service -Name TermService -StartupType Automatic
                Write-Host "âœ… RDP Enabled Successfully!"
                return $true
            } catch {
                Write-Host "âš  Failed to enable RDP, trying alternative..."
                return $false
            }
        }

        if (-not (Enable-RDP)) {
            Write-Host "ðŸ”„ Using Alternative Method..."
            Start-Process -FilePath "cmd.exe" -ArgumentList "/c reg add 'HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server' /v fDenyTSConnections /t REG_DWORD /d 0 /f"
            Start-Process -FilePath "cmd.exe" -ArgumentList "/c netsh advfirewall firewall set rule group='Remote Desktop' new enable=Yes"
        }

    # Ensure Persistent RDP Session After Reboot
    - name: Ensure Persistent RDP Session
      run: |
        reg add "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon" /v KeepRDPConnections /t REG_DWORD /d 1 /f

    # Enable Virtual Machine Support with Failover
    - name: Enable Virtual Machine Support
      run: |
        function Enable-Virtualization {
            try {
                bcdedit /set hypervisorlaunchtype Auto
                Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All -NoRestart
                Write-Host "âœ… Hyper-V Enabled!"
                return $true
            } catch {
                Write-Host "âš  Hyper-V Failed! Trying Alternative..."
                return $false
            }
        }

        if (-not (Enable-Virtualization)) {
            Write-Host "ðŸ”„ Trying Alternative Virtualization..."
            Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform -NoRestart
            Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux -NoRestart
        }

    # Install WinGet (Tries Multiple Methods)
    - name: Install WinGet (Auto-Fix)
      run: |
        function Install-WinGet {
            try {
                if (Get-Command winget -ErrorAction SilentlyContinue) {
                    Write-Host "âœ… WinGet is already installed!"
                    return $true
                }
                Write-Host "ðŸ”„ Installing WinGet..."
                Start-Process -NoNewWindow -Wait -FilePath "cmd.exe" -ArgumentList "/c start ms-windows-store://pdp/?ProductId=9NBLGGH4NNS1"
                Start-Sleep -Seconds 30
                return $true
            } catch {
                Write-Host "âš  WinGet installation failed, trying manual method..."
                return $false
            }
        }

        if (-not (Install-WinGet)) {
            Write-Host "ðŸ”„ Attempting Manual WinGet Installation..."
            Invoke-WebRequest -Uri "https://aka.ms/getwinget" -OutFile "$env:TEMP\WinGet.msixbundle"
            Add-AppxPackage -Path "$env:TEMP\WinGet.msixbundle"
        }

    # Install Essential Software via WinGet
    - name: Install Essential Tools (VS Code, Chrome)
      run: |
        winget install --silent --accept-package-agreements --accept-source-agreements Microsoft.PowerToys
        winget install --silent --accept-package-agreements --accept-source-agreements Microsoft.VisualStudioCode
        winget install --silent --accept-package-agreements --accept-source-agreements Google.Chrome

    # Start Playit and Keep RDP Active
    - name: Start Playit Agent
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }}
      run: |
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow

    # Keep GitHub Actions Runner Alive
    - name: Keep Runner Alive
      run: |
        while ($true) {
          Write-Host "Keeping runner alive... $(Get-Date)"
          Start-Sleep -Seconds 300
        }
