name: Optimized Playit RDP with VM Support

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    # Download and Install Playit
    - name: Download and Install Playit
      run: |
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Start-Sleep -Seconds 5

    # Enable RDP and Persist After Reboot
    - name: Enable and Persist RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "p@ssw0rd!" -Force)

        # Enable multiple RDP sessions
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fSingleSessionPerUser" -Value 0

        # Ensure RDP service starts after reboot
        Set-Service -Name TermService -StartupType Automatic

    # Enable Virtualization Support
    - name: Enable Virtualization for VMware & VirtualBox
      run: |
        # Enable Hyper-V (for VMs)
        Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -NoRestart
        Enable-WindowsOptionalFeature -Online -FeatureName Containers -All -NoRestart

        # Enable Nested Virtualization
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "EnableVirtualizationBasedSecurity" -Value 0
        Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\DeviceGuard" -Name "EnableVirtualizationBasedSecurity" -Value 0

        # Enable VT-x / AMD-V for VirtualBox
        bcdedit /set hypervisorlaunchtype off
        bcdedit /set vm No
        bcdedit /set nx AlwaysOn

        # Disable Windows Defender Credential Guard (causes VM conflicts)
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Lsa" /v LsaCfgFlags /t REG_DWORD /d 0 /f

    # Optimize Windows for Maximum Performance
    - name: Enable High-Performance Mode
      run: |
        powercfg /S SCHEME_MIN
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v LargeSystemCache /t REG_DWORD /d 1 /f
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v IoPageLockLimit /t REG_DWORD /d 4294967295 /f
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Executive" /v AdditionalCriticalWorkerThreads /t REG_DWORD /d 4 /f
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Executive" /v AdditionalDelayedWorkerThreads /t REG_DWORD /d 4 /f

    # Disable Unnecessary Windows Services to Free Up Resources
    - name: Disable Unnecessary Services
      run: |
        Get-Service | Where-Object { $_.StartType -eq 'Automatic' -and $_.Status -eq 'Running' } | `
        Where-Object { $_.Name -notmatch 'TermService|WinRM|EventLog|W32Time|WSearch' } | `
        ForEach-Object { Set-Service -Name $_.Name -StartupType Disabled }

    # Register Playit as a Windows Service for Auto-Start
    - name: Register Playit as a Background Service
      run: |
        sc create PlayitService binPath= "$env:USERPROFILE\playit.exe --secret $env:PLAYIT_AUTH_KEY" start= auto
        sc start PlayitService

    # Start Playit Immediately
    - name: Start Playit Agent
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }}
      run: |
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow

    # Ensure RDP reconnects after restart
    - name: Keep RDP Session Active
      run: |
        reg add "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon" /v KeepRDPConnections /t REG_DWORD /d 1 /f

    # Keep GitHub Actions Runner Alive
    - name: Keep Runner Alive
      run: |
        while ($true) {
          Write-Host "Keeping runner alive... $(Get-Date)"
          Start-Sleep -Seconds 300
        }
