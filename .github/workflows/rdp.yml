name: Maximum Performance Stable RDP Tunnel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 355

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Apply Maximum System & CPU Performance Tweaks
      shell: pwsh
      run: |
        # Power Plan: Ultimate
        $UltimateGUID = "e9a42b02-d5df-448d-aa00-03f14749eb61"
        if (!(powercfg -list | Select-String $UltimateGUID)) {
          powercfg -duplicatescheme $UltimateGUID
        }
        powercfg /setactive $UltimateGUID

        # Disable sleep, hibernate, etc.
        powercfg -change standby-timeout-ac 0
        powercfg -change hibernate-timeout-ac 0
        powercfg -change disk-timeout-ac 0
        powercfg -change monitor-timeout-ac 0

        # Set CPU 100%
        powercfg -setacvalueindex SCHEME_CURRENT SUB_PROCESSOR PROCTHROTTLEMIN 100
        powercfg -setacvalueindex SCHEME_CURRENT SUB_PROCESSOR PROCTHROTTLEMAX 100
        powercfg -setacvalueindex SCHEME_CURRENT SUB_PROCESSOR SYSCOOLPOL 1
        powercfg /setactive SCHEME_CURRENT

        # Pagefile settings
        Get-CimInstance Win32_PageFileSetting | Remove-CimInstance -ErrorAction SilentlyContinue
        Set-CimInstance (Get-CimInstance Win32_ComputerSystem) -Property @{AutomaticManagedPagefile = $false}
        New-CimInstance -ClassName Win32_PageFileSetting -Property @{Name="C:\pagefile.sys"; InitialSize=4096; MaximumSize=8192}

        # Disable indexing
        Stop-Service -Name "WSearch" -Force -ErrorAction SilentlyContinue
        Set-Service -Name "WSearch" -StartupType Disabled -ErrorAction SilentlyContinue

    - name: üîê Create Admin User & Configure RDP + GPU + Clipboard
      id: rdp
      shell: pwsh
      run: |
        $Username = "rdpadmin"
        $Password = "UltraStable2024!"
        $SecurePassword = ConvertTo-SecureString $Password -AsPlainText -Force

        if (!(Get-LocalUser -Name $Username -ErrorAction SilentlyContinue)) {
          New-LocalUser $Username -Password $SecurePassword -FullName "RDP Admin" -PasswordNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member $Username
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $Username
        }

        # Enable RDP and disable NLA
        Set-ItemProperty 'HKLM:\System\CurrentControlSet\Control\Terminal Server' fDenyTSConnections 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' UserAuthentication 0

        # Enable GPU acceleration
        New-Item -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' -Force | Out-Null
        Set-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' -Name "fEnableWddmDriver" -Value 1

        # Clipboard & Drive redirection (usually controlled by client, but enable at server side)
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "fDisableClip" -Value 0
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "fDisableCdm" -Value 0

        # Disable visual distractions for latency
        Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Value 2
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "UserPreferencesMask" -Value ([byte[]](0x90,0x12,0x03,0x80,0x10,0x00,0x00,0x00))

        # Disable RDP font smoothing, wallpaper
        Set-ItemProperty -Path "HKCU:\Software\Microsoft\Terminal Server Client" -Name "DisableFontSmoothing" -Value 1
        Set-ItemProperty -Path "HKCU:\Software\Microsoft\Terminal Server Client" -Name "DisableWallpaper" -Value 1

        # Disable unnecessary services
        $services = "DiagTrack","dmwappushservice","MapsBroker","TrkWks","WbioSrvc","WMPNetworkSvc","XblAuthManager","XblGameSave","XboxGipSvc","Fax","Themes"
        foreach ($s in $services) {
          Stop-Service -Name $s -Force -ErrorAction SilentlyContinue
          Set-Service -Name $s -StartupType Disabled -ErrorAction SilentlyContinue
        }

        # Disable Defender
        Set-MpPreference -DisableRealtimeMonitoring $true -ErrorAction SilentlyContinue
        Stop-Service -Name "wuauserv" -Force -ErrorAction SilentlyContinue
        Set-Service -Name "wuauserv" -StartupType Disabled -ErrorAction SilentlyContinue

        # Optional Auto-login (may not work on GitHub hosted runners, safe guarded)
        try {
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "AutoAdminLogon" -Value "1"
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "DefaultUsername" -Value $Username
          Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "DefaultPassword" -Value $Password
        } catch {
          Write-Host "Auto-login setup skipped (non-critical)"
        }

        # Export password
        echo "RDP_PASSWORD=$Password" >> $env:GITHUB_ENV

    - name: üöÄ Start RDP Tunnel and Keep Alive
      shell: pwsh
      env:
        PLAYIT_SECRET: ${{ secrets.PLAYIT_SECRET }}
        RDP_PASSWORD: ${{ env.RDP_PASSWORD }}
      run: |
        $exePath = "$env:USERPROFILE\playit.exe"
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-windows-x86_64-signed.exe" -OutFile $exePath

        if (-not $env:PLAYIT_SECRET) {
          Write-Host "‚ùå PLAYIT_SECRET is missing."
          exit 1
        }

        $proc = Start-Process -FilePath $exePath -ArgumentList "--secret", "$env:PLAYIT_SECRET" -WindowStyle Hidden -PassThru
        $proc.PriorityClass = [System.Diagnostics.ProcessPriorityClass]::High
        Start-Sleep -Seconds 20

        Write-Host "‚úÖ RDP Tunnel Started!"
        Write-Host "   ============================"
        Write-Host "   üë§ Username: rdpadmin"
        Write-Host "   üîë Password: $env:RDP_PASSWORD"
        Write-Host "   ============================"

        $end = (Get-Date).AddHours(5).AddMinutes(50)
        while ((Get-Date) -lt $end) {
          $check = Get-Process -Name "playit" -ErrorAction SilentlyContinue
          if (-not $check) {
            try {
              $proc = Start-Process -FilePath $exePath -ArgumentList "--secret", "$env:PLAYIT_SECRET" -WindowStyle Hidden -PassThru
              $proc.PriorityClass = [System.Diagnostics.ProcessPriorityClass]::High
              Write-Host "‚úÖ Tunnel restarted (PID: $($proc.Id))"
            } catch {
              Write-Host "‚ùå Restart failed: $_"
            }
          } else {
            Write-Host "[$(Get-Date -Format 'HH:mm:ss')] Tunnel is active (PID: $($check.Id))"
          }
          Start-Sleep -Seconds 180
        }

        Write-Host "‚èπÔ∏è Time's up. Tunnel closed."
