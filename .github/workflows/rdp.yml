name: Persistent Playit RDP Tunnel

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    # üîπ Enable RDP and keep it persistent
    - name: Enable and Persist RDP
      run: |
        Write-Host "üîÑ Enabling RDP..."
        $rdpKeys = @(
          'HKLM:\System\CurrentControlSet\Control\Terminal Server',
          'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp'
        )
        foreach ($key in $rdpKeys) {
          Set-ItemProperty -Path $key -Name "fDenyTSConnections" -Value 0 -ErrorAction SilentlyContinue
          Set-ItemProperty -Path $key -Name "UserAuthentication" -Value 1 -ErrorAction SilentlyContinue
          Set-ItemProperty -Path $key -Name "fSingleSessionPerUser" -Value 0 -ErrorAction SilentlyContinue
        }
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop" -ErrorAction SilentlyContinue
        Set-Service -Name TermService -StartupType Automatic
        Write-Host "‚úÖ RDP Enabled Successfully!"

    # üîπ Install WinGet (Improved)
    - name: Install WinGet
      run: |
        Write-Host "üîÑ Checking for WinGet..."
        if (-not (Get-Command winget -ErrorAction SilentlyContinue)) {
          Write-Host "Installing WinGet via MSIXBUNDLE..."
          Invoke-WebRequest -Uri "https://aka.ms/getwinget" -OutFile "$env:TEMP\WinGet.msixbundle"
          Try {
            Add-AppxPackage -Path "$env:TEMP\WinGet.msixbundle" -ErrorAction Stop
          } Catch {
            Write-Host "‚ö†Ô∏è Add-AppxPackage failed. Trying alternative EXE method..."
            Invoke-WebRequest -Uri "https://github.com/microsoft/winget-cli/releases/latest/download/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle" -OutFile "$env:TEMP\winget.msixbundle"
            Try {
              Add-AppxPackage -Path "$env:TEMP\winget.msixbundle" -ErrorAction Stop
            } Catch {
              Write-Host "‚ùå WinGet installation failed. Skipping."
            }
          }
        }
        if (Get-Command winget -ErrorAction SilentlyContinue) { Write-Host "‚úÖ WinGet installed!" } else { Write-Host "‚ùå WinGet install failed." }

    # üîπ Enable Virtualization & Hyper-V
    - name: Enable Virtualization & Hyper-V
      run: |
        Write-Host "üîÑ Enabling Virtualization..."
        bcdedit /set hypervisorlaunchtype Auto
        Write-Host "üîÑ Enabling Hyper-V..."
        $features = @("Microsoft-Hyper-V-All", "Microsoft-Hyper-V", "Microsoft-Hyper-V-Platform", "HypervisorPlatform")
        foreach ($feature in $features) {
          Try { Enable-WindowsOptionalFeature -Online -FeatureName $feature -NoRestart -ErrorAction Stop }
          Catch { Write-Host "‚ö†Ô∏è Failed to enable $feature, trying next..." }
        }
        Write-Host "üîÑ Trying DISM method for Hyper-V..."
        DISM /Online /Enable-Feature /FeatureName:Microsoft-Hyper-V-All /All /NoRestart
        Write-Host "‚úÖ Virtualization & Hyper-V Enabled!"

    # üîπ Install Playit (Multiple Methods)
    - name: Install Playit
      run: |
        Write-Host "üîÑ Downloading Playit..."
        $playitUrl = "https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-windows-x86_64-signed.exe"
        Invoke-WebRequest -Uri $playitUrl -OutFile "$env:USERPROFILE\playit.exe" -ErrorAction SilentlyContinue
        if (!(Test-Path "$env:USERPROFILE\playit.exe")) {
          Write-Host "‚ö†Ô∏è Download failed, trying alternate source..."
          Invoke-WebRequest -Uri "https://playit.gg/downloads/playit.exe" -OutFile "$env:USERPROFILE\playit.exe"
        }
        if (Test-Path "$env:USERPROFILE\playit.exe") { Write-Host "‚úÖ Playit Downloaded!" } else { Write-Host "‚ùå Playit download failed." }

    # üîπ Register Playit as a Service
    - name: Register Playit as a Service
      run: |
        Write-Host "üîÑ Registering Playit as a service..."
        sc create PlayitService binPath= "$env:USERPROFILE\playit.exe --secret $env:PLAYIT_AUTH_KEY" start= auto
        Try { sc start PlayitService }
        Catch { Write-Host "‚ö†Ô∏è Playit Service failed to start. Trying manual execution..."; Start-Process -FilePath "$env:USERPROFILE\playit.exe" }
        Write-Host "‚úÖ Playit Service Registered!"

    # üîπ Keep Session Active
    - name: Keep Session Active
      run: |
        Write-Host "üîÑ Keeping RDP Session Active..."
        reg add "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon" /v KeepRDPConnections /t REG_DWORD /d 1 /f
        Write-Host "‚úÖ RDP Session Kept Active!"

    # üîπ Keep GitHub Actions runner alive
    - name: Keep Runner Alive
      run: |
        while ($true) {
          Write-Host "üîÑ Keeping runner alive... $(Get-Date)"
          Start-Sleep -Seconds 300
        }
