# ðŸš€ Ultimate Performance & Android Emulator RDP Workflow (v4 - Lag Fix) ðŸš€
# This version aggressively targets RDP lag by optimizing network protocols,
# disabling more visual effects, and using a lighter Android system image.
# The emulator continues to use a stable software renderer.

name: Ultimate Performance & Android RDP (Lag Fixed)
on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest
    timeout-minutes: 360  # 6 hours
    steps:
    - name: Check out the repository
      uses: actions/checkout@v4
    
    - name: System Analysis and Base Optimization
      shell: powershell
      run: |
        Write-Host "[*] Analyzing system and applying base optimizations..."
        
        # Get system specs
        $cpu = Get-CimInstance -ClassName Win32_Processor
        $memory = Get-CimInstance -ClassName Win32_OperatingSystem
        $gpu = Get-CimInstance -ClassName Win32_VideoController | Where-Object { $_.Name -notlike "*Basic*" }
        
        Write-Host "[+] CPU: $($cpu.Name) - $($cpu.NumberOfCores) cores, $($cpu.NumberOfLogicalProcessors) threads"
        Write-Host "[+] RAM: $([math]::Round($memory.TotalVisibleMemorySize/1MB/1024, 2)) GB"
        if ($gpu) { Write-Host "[+] GPU: $($gpu.Name)" }
        
        # Essential system optimizations
        Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "Win32PrioritySeparation" -Value 26 -Force
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Value 10 -Force
        
        # --- LAG FIX: More aggressive network optimizations ---
        netsh int tcp set global autotuninglevel=highlyrestricted
        netsh int tcp set global chimney=enabled
        netsh int tcp set global rss=enabled
        netsh int tcp set global ecncapability=disabled
        netsh int tcp set global timestamps=disabled
        # Disable Large Send Offload, which can cause latency in some virtual environments
        netsh int tcp set global lso=disabled
        
        Write-Host "[SUCCESS] Base system and network optimization completed"

    - name: Enable Virtualization Features
      shell: powershell
      run: |
        Write-Host "[*] Enabling Virtualization Features for Android Emulator (WHPX)..."
        dism.exe /online /enable-feature /featurename:HypervisorPlatform /all /norestart
        dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
        Write-Host "[SUCCESS] Virtualization features enabled."
    
    - name: Configure Auto-Login RDP Administrator
      shell: powershell
      run: |
        Write-Host "[*] Setting up auto-login RDP administrator..."
        
        $username = "rdpadmin"
        $password = "UltraFast2024!"
        
        $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
        
        if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
            Set-LocalUser -Name $username -Password $securePassword
        } else {
            New-LocalUser -Name $username -Password $securePassword -FullName "Auto-Login RDP Administrator" -Description "Auto-Login RDP Access" -PasswordNeverExpires -UserMayNotChangePassword -AccountNeverExpires
        }
        
        Add-LocalGroupMember -Group "Administrators" -Member $username -ErrorAction SilentlyContinue
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction SilentlyContinue
        
        $regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
        Set-ItemProperty -Path $regPath -Name "AutoAdminLogon" -Value "1" -Force
        Set-ItemProperty -Path $regPath -Name "DefaultUserName" -Value $username -Force
        Set-ItemProperty -Path $regPath -Name "DefaultPassword" -Value $password -Force
        Set-ItemProperty -Path $regPath -Name "ForceAutoLogon" -Value "1" -Force
        
        $personalizationPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization"
        New-Item -Path $personalizationPath -Force -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $personalizationPath -Name "NoLockScreen" -Value 1 -Force
        
        Write-Host "[SUCCESS] Auto-login administrator configured successfully."
        Write-Host "[INFO] CREDENTIALS: Username: $username | Password: $password"

    - name: Install and Configure Android Emulator
      shell: powershell
      run: |
        Write-Host "[*] Installing Android SDK and configuring emulator for compatibility..."
        
        $env:ANDROID_SDK_ROOT = "$env:HOMEDRIVE$env:HOMEPATH\Android\sdk"
        $env:PATH = $env:PATH + ";${env:ANDROID_SDK_ROOT}\cmdline-tools\latest\bin;${env:ANDROID_SDK_ROOT}\emulator;${env:ANDROID_SDK_ROOT}\platform-tools"
        
        $sdkUrl = "https://dl.google.com/android/repository/commandlinetools-win-11076708_latest.zip"
        $sdkZip = "$env:TEMP\sdk-tools.zip"
        Invoke-WebRequest -Uri $sdkUrl -OutFile $sdkZip
        $sdkDir = "${env:ANDROID_SDK_ROOT}\cmdline-tools"
        New-Item -ItemType Directory -Path $sdkDir -Force
        Expand-Archive -Path $sdkZip -DestinationPath $sdkDir -Force
        Move-Item -Path "$sdkDir\cmdline-tools\*" -Destination "$sdkDir" -Force
        Rename-Item -Path "$sdkDir\cmdline-tools" -NewName "latest"
        
        Write-Host "  - Installing emulator, platform-tools, and a lightweight system image..."
        yes | & "$sdkDir\latest\bin\sdkmanager.bat" --licenses > $null
        # --- LAG FIX: Use the 'default' image instead of 'google_apis' for lower resource usage ---
        & "$sdkDir\latest\bin\sdkmanager.bat" "platform-tools" "emulator" "system-images;android-33;default;x86_64"
        
        Write-Host "  - Creating Android Virtual Device (AVD)..."
        echo "no" | & "$sdkDir\latest\bin\avdmanager.bat" create avd -n "Pixel_API_33" -k "system-images;android-33;default;x86_64" --force
        
        Write-Host "[*] Forcing emulator to use software rendering (SwiftShader)..."
        $androidConfigPath = "$env:HOMEDRIVE$env:HOMEPATH\.android"
        if (-not (Test-Path $androidConfigPath)) { New-Item -Path $androidConfigPath -ItemType Directory -Force }
        $configFile = "$androidConfigPath\advancedFeatures.ini"
        Set-Content -Path $configFile -Value "HardwareGpu.Mode = swiftshader_indirect"
        
        Write-Host "[SUCCESS] Android Emulator installed and configured for stability and performance."

    - name: Enable and Supercharge RDP Service
      shell: powershell
      run: |
        Write-Host "[*] Enabling and supercharging RDP service..."
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fSingleSessionPerUser" -Value 0 -Force
        
        # --- LAG FIX: Force RDP to use a more efficient video codec and network settings ---
        $policyPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services\Client"
        New-Item -Path $policyPath -Force -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $policyPath -Name "fClientDisableUDP" -Value 0 -Type DWord -Force # Ensure UDP is enabled
        Set-ItemProperty -Path $policyPath -Name "bEnforceGpuPreference" -Value 1 -Type DWord -Force # Use GPU for rendering

        $rdpPath = 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp'
        Set-ItemProperty -Path $rdpPath -Name "UserAuthentication" -Value 0 -Force
        Set-ItemProperty -Path $rdpPath -Name "SecurityLayer" -Value 0 -Force
        Set-ItemProperty -Path $rdpPath -Name "MinEncryptionLevel" -Value 1 -Force
        Set-ItemProperty -Path $rdpPath -Name "fPromptForPassword" -Value 0 -Force
        
        Write-Host "[SUCCESS] RDP service supercharged for low latency"
    
    - name: Configure Secure Firewall Rule for RDP
      shell: powershell
      run: |
        Write-Host "[*] Configuring secure firewall rule for RDP..."
        New-NetFirewallRule -DisplayName "Allow RDP (Port 3389)" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 3389 -Profile Any
        Write-Host "[SUCCESS] Firewall rule created to allow RDP on port 3389."

    - name: Apply Advanced Performance & Smoothness Tuning
      shell: powershell
      run: |
        Write-Host "[*] Applying advanced performance and smoothness tuning..."
        
        $powercfgOutput = powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61
        $newGuid = ($powercfgOutput -split ' ')[3]
        powercfg /s $newGuid
        Write-Host "[SUCCESS] Ultimate Performance power scheme activated"

        $servicesToDisable = @("SysMain", "Print Spooler", "BITS", "diagtrack", "MapsBroker", "WbioSrvc", "lfsvc", "Themes", "TabletInputService", "dmwappushservice")
        foreach ($service in $servicesToDisable) {
            try {
                Get-Service -Name $service | Stop-Service -Force -ErrorAction Stop
                Get-Service -Name $service | Set-Service -StartupType Disabled -ErrorAction Stop
            } catch { Write-Host "  - INFO: Could not stop/disable service '$service'." -ForegroundColor Gray }
        }
        Write-Host "[SUCCESS] Non-essential services disabled"

        # --- LAG FIX: Disable more visual effects including font smoothing ---
        Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Value 2 -Force
        New-Item -Path "HKCU:\Control Panel\Desktop" -Force -ErrorAction SilentlyContinue
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Value 0 -Force
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Value 0 -Force
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "FontSmoothing" -Value "0" -Force # Disable font anti-aliasing
        $personalizePath = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize"
        New-Item -Path $personalizePath -Force -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $personalizePath -Name "EnableTransparency" -Value 0 -Force
        Write-Host "[SUCCESS] Visual effects aggressively optimized for max performance"
        
        Set-MpPreference -DisableRealtimeMonitoring $true -ErrorAction SilentlyContinue
        Write-Host "[SUCCESS] Windows Defender real-time monitoring disabled"

    - name: Start RDP and Tunnel
      shell: powershell
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }}
      run: |
        Write-Host "[*] Starting RDP services and Playit tunnel..."
        Start-Service -Name "TermService"
        Start-Sleep -Seconds 5
        
        if (-not $env:PLAYIT_AUTH_KEY) {
            Write-Host "[ERROR] PLAYIT_AUTH_KEY secret not found!" -ForegroundColor Red
            exit 1
        }
        
        $playitPath = "$env:USERPROFILE\playit.exe"
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-windows-x86_64-signed.exe" -OutFile $playitPath
        
        $process = Start-Process -FilePath $playitPath -ArgumentList "--secret", "`"$env:PLAYIT_AUTH_KEY`"" -PassThru -WindowStyle Hidden
        $process.PriorityClass = "High"
        
        Write-Host "[SUCCESS] Playit Agent started with HIGH priority."
        Start-Sleep -Seconds 20
        
        if (-not (Get-Process -Id $process.Id -ErrorAction SilentlyContinue)) {
            Write-Host "[ERROR] Tunnel agent failed to stay running." -ForegroundColor Red
            exit 1
        }

    - name: Display Connection Information
      shell: powershell
      run: |
        Write-Host ""
        Write-Host "********** YOUR ANDROID-READY RDP IS HERE! **********"
        Write-Host "======================================================"
        Write-Host ""
        Write-Host "[INFO] AUTO-LOGIN CREDENTIALS:"
        Write-Host "   - Username: rdpadmin"
        Write-Host "   - Password: UltraFast2024!"
        Write-Host ""
        Write-Host "[INFO] HOW TO CONNECT:"
        Write-Host "1. Go to: https://playit.gg/account/tunnels"
        Write-Host "2. Copy the IP:PORT address from your active TCP tunnel."
        Write-Host "3. Paste it into your RDP client."
        Write-Host ""
        Write-Host "[INFO] LAG FIXES APPLIED:"
        Write-Host "   [+] RDP network protocol and video codec optimized for speed."
        Write-Host "   [+] Extra visual effects (like font smoothing) disabled."
        Write-Host "   [+] AVD uses a lightweight 'default' Android image to save resources."
        Write-Host ""
        Write-Host "[INFO] This session will remain active for up to 6 hours."
        Write-Host "[SUCCESS] Your connection is now more stable, secure, and powerful."
        Write-Host ""
    
    - name: Maintain Session
      shell: powershell
      run: |
        Write-Host "[*] Session is active. This window will keep the job running."
        Start-Sleep -Seconds 21400 # Keep alive for just under 6 hours
        Write-Host "[*] Session time limit reached."
