name: Ultimate Performance Auto-Login RDP Tunnel (Encoding Fixed)
on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest
    timeout-minutes: 360
    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: System Analysis and Base Optimization
      shell: powershell
      run: |
        # System Info & Scheduling Tweaks
        Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\PriorityControl" -Name "Win32PrioritySeparation" -Value 26 -Force
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "SystemResponsiveness" -Value 10 -Force

        # Network Optimizations
        netsh int tcp set global autotuninglevel=highlyrestricted
        netsh int tcp set global chimney=enabled
        netsh int tcp set global rss=enabled
        netsh int tcp set global ecncapability=disabled
        netsh int tcp set global timestamps=disabled
        netsh int tcp set global netdma=enabled
        netsh int tcp set global congestionprovider=ctcp
        netsh int ip set global taskoffload=enabled

        # Ensure CPU stays at 100% performance
        powercfg -setacvalueindex SCHEME_MIN SUB_PROCESSOR PROCTHROTTLEMAX 100
        powercfg -setdcvalueindex SCHEME_MIN SUB_PROCESSOR PROCTHROTTLEMAX 100
        powercfg -setacvalueindex SCHEME_MIN SUB_PROCESSOR PROCTHROTTLEMIN 100
        powercfg -setdcvalueindex SCHEME_MIN SUB_PROCESSOR PROCTHROTTLEMIN 100
        powercfg -setacvalueindex SCHEME_MIN SUB_PROCESSOR PERFORMANCEBOOSTMODE 2
        powercfg -setactive SCHEME_MIN

    - name: Configure Auto-Login RDP Administrator
      shell: powershell
      run: |
        $username = "rdpadmin"
        $password = "UltraFast2024!"
        $securePassword = ConvertTo-SecureString $password -AsPlainText -Force

        if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
          New-LocalUser -Name $username -Password $securePassword -PasswordNeverExpires -UserMayNotChangePassword -AccountNeverExpires
        }
        Set-LocalUser -Name $username -Password $securePassword
        Add-LocalGroupMember -Group "Administrators" -Member $username -ErrorAction SilentlyContinue
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction SilentlyContinue

        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "AutoAdminLogon" -Value "1" -Force
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "DefaultUserName" -Value $username -Force
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "DefaultPassword" -Value $password -Force
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" -Name "ForceAutoLogon" -Value "1" -Force

        $lockScreenPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization"
        if (-not (Test-Path $lockScreenPath)) {
          New-Item -Path $lockScreenPath -Force | Out-Null
        }
        Set-ItemProperty -Path $lockScreenPath -Name "NoLockScreen" -Value 1 -Force

    - name: Enable and Configure RDP
      shell: powershell
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fSingleSessionPerUser" -Value 0 -Force

        $policyPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
        New-Item -Path $policyPath -Force -ErrorAction SilentlyContinue
        Set-ItemProperty -Path $policyPath -Name "bEnforceGpuPreference" -Value 1 -Type DWord -Force

        $rdpPath = 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp'
        Set-ItemProperty -Path $rdpPath -Name "UserAuthentication" -Value 0 -Force
        Set-ItemProperty -Path $rdpPath -Name "SecurityLayer" -Value 0 -Force
        Set-ItemProperty -Path $rdpPath -Name "MinEncryptionLevel" -Value 1 -Force
        Set-ItemProperty -Path $rdpPath -Name "fPromptForPassword" -Value 0 -Force

    - name: Create Firewall Rule
      shell: powershell
      run: |
        New-NetFirewallRule -DisplayName "Allow RDP (Port 3389)" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 3389 -Profile Any

    - name: Performance & Visual Optimizations
      shell: powershell
      run: |
        $guid = ((powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61) -split ' ')[3]
        powercfg /s $guid

        $services = @("SysMain", "Print Spooler", "BITS", "diagtrack", "MapsBroker", "WbioSrvc", "lfsvc", "Themes", "TabletInputService", "dmwappushservice")
        foreach ($svc in $services) {
          try {
            Stop-Service $svc -Force -ErrorAction Stop
            Set-Service $svc -StartupType Disabled
          } catch {}
        }

        Set-ItemProperty -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects" -Name "VisualFXSetting" -Value 2 -Force
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "DragFullWindows" -Value 0 -Force
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "MenuShowDelay" -Value 0 -Force
        Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" -Name "EnableTransparency" -Value 0 -Force

        Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name "DisablePagingExecutive" -Value 1 -Force
        Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "WaitToKillServiceTimeout" -Value 2000 -Force
        Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" -Name "NetworkThrottlingIndex" -Value 0xFFFFFFFF -Force
        Set-MpPreference -DisableRealtimeMonitoring $true -ErrorAction SilentlyContinue

    - name: Start and Prioritize RDP Service
      shell: powershell
      run: |
        Start-Service -Name "TermService"
        Start-Sleep -Seconds 5
        $proc = Get-Process -Name svchost | Where-Object { (Get-CimInstance Win32_Service -Filter "ProcessId=$($_.Id)").Name -contains 'TermService' }
        if ($proc) { $proc.PriorityClass = 'High' }

    - name: Start Playit Tunnel
      shell: powershell
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }}
      run: |
        if (-not $env:PLAYIT_AUTH_KEY) { exit 1 }
        $path = "$env:USERPROFILE\playit.exe"
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-windows-x86_64-signed.exe" -OutFile $path
        $p = Start-Process -FilePath $path -ArgumentList "--secret", "`"$env:PLAYIT_AUTH_KEY`"" -PassThru -WindowStyle Hidden
        $p.PriorityClass = "High"
        Start-Sleep -Seconds 20

    - name: Keep Session Alive
      shell: powershell
      run: |
        Start-Sleep -Seconds 21400
